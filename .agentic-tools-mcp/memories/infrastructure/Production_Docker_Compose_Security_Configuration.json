{
  "id": "0bdbf5fd-4ba7-4b62-981c-51128242d2f0",
  "title": "Production Docker Compose Security Configuration",
  "details": "Complete production-hardened Docker Compose configuration for Codex Bootstrap application with comprehensive security features:\n\n## Configuration File: docker-compose.production-secure.yml\n\n**Services & Security Features:**\n- Backend: NestJS app with non-root user (1001), read-only filesystem, capability restrictions (ALL dropped, only CHOWN/SETGID/SETUID added), 1GB memory limit\n- Frontend: Next.js app with similar security hardening, 512MB memory limit  \n- Database: PostgreSQL with file-based secrets, non-root user, 2GB memory limit\n- Nginx: Reverse proxy with SSL termination, rate limiting, security headers, 256MB memory limit\n- Falco: Runtime security monitoring with privileged access for threat detection\n\n**Network Security:**\n- secure_backend network (172.20.0.0/16) for internal backend communication\n- secure_frontend network (172.21.0.0/16) for frontend-nginx communication  \n- monitoring network for Falco security monitoring\n- No external networks, complete isolation\n\n**SSL/TLS Configuration:**\n- Modern cipher suites (TLS 1.2+, ECDHE, ChaCha20-Poly1305)\n- Perfect Forward Secrecy with DHE 2048-bit parameters\n- OCSP stapling for certificate validation\n- Comprehensive security headers: HSTS, CSP, X-Frame-Options, XSS protection\n- Certificate and private key management with proper permissions (644/600)\n\n**Secrets Management:**\n- File-based database credentials in secrets/ directory\n- Proper permission restrictions (600) on all secret files\n- Environment variable isolation for production configuration\n\n**Resource & Security Controls:**\n- Memory and CPU limits on all services to prevent resource exhaustion\n- Capability restrictions and no-new-privileges security options\n- Read-only root filesystems with tmpfs mounts for temp directories\n- Health checks and restart policies for service resilience\n\n**Monitoring & Observability:**  \n- Falco runtime security monitoring with custom rules (falco/falco.yaml)\n- JSON structured logging with rotation (max 3 files, 10MB each)\n- Docker socket mounting for container-level monitoring\n- Health check endpoints for all application services\n\n**Supporting Infrastructure:**\n- nginx/nginx.conf: Reverse proxy configuration with rate limiting and security\n- nginx/ssl.conf: SSL/TLS hardening configuration\n- .env.production: Production environment variables with security settings\n- certs/: SSL certificates and DH parameters for HTTPS\n- secrets/: Database authentication files with restricted permissions\n\n**Validation & Testing:**\n- test-production-security.sh: Comprehensive security validation script (30+ checks)\n- All security configurations validated: file permissions, SSL certs, Docker security, network isolation, resource limits, monitoring integration\n- Full dry-run testing capability for deployment validation\n\n**Security Compliance Features:**\n- Non-root execution across all services\n- Capability restrictions following principle of least privilege  \n- Network segmentation with custom subnets\n- Comprehensive audit logging via Falco\n- Modern encryption standards (TLS 1.2+)\n- Security header implementation for web protection\n\n**Production Readiness:**\n- Complete deployment guide with pre-deployment checklist\n- Operational procedures for service management, backup, monitoring\n- Troubleshooting guide for common deployment issues\n- Security best practices and compliance considerations\n- Support for certificate renewal and secret rotation\n\nThis configuration provides enterprise-grade security hardening suitable for production deployments with comprehensive threat detection, network isolation, and security monitoring capabilities.",
  "category": "infrastructure",
  "dateCreated": "2025-08-03T20:30:25.514Z",
  "dateUpdated": "2025-08-03T20:30:25.514Z"
}