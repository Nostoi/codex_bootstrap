apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: postgresql
  namespace: codex-bootstrap
  labels:
    app: postgresql
    component: database
spec:
  serviceName: postgresql-headless
  replicas: 1
  updateStrategy:
    type: RollingUpdate
  selector:
    matchLabels:
      app: postgresql
  template:
    metadata:
      labels:
        app: postgresql
        component: database
    spec:
      securityContext:
        runAsUser: 999
        runAsGroup: 999
        fsGroup: 999
      containers:
        - name: postgresql
          image: postgres:15-alpine
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
              name: postgresql
          env:
            - name: POSTGRES_DB
              value: "helmsman_production"
            - name: POSTGRES_USER
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: username
            - name: POSTGRES_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: postgresql-secret
                  key: password
            - name: PGDATA
              value: "/var/lib/postgresql/data/pgdata"
            # Performance tuning
            - name: POSTGRES_INITDB_ARGS
              value: "--auth-host=scram-sha-256 --auth-local=scram-sha-256"
          args:
            - "postgres"
            - "-c"
            - "max_connections=200"
            - "-c"
            - "shared_buffers=256MB"
            - "-c"
            - "effective_cache_size=1GB"
            - "-c"
            - "maintenance_work_mem=64MB"
            - "-c"
            - "checkpoint_completion_target=0.9"
            - "-c"
            - "wal_buffers=16MB"
            - "-c"
            - "default_statistics_target=100"
            - "-c"
            - "random_page_cost=1.1"
            - "-c"
            - "effective_io_concurrency=200"
            - "-c"
            - "work_mem=4MB"
            - "-c"
            - "min_wal_size=1GB"
            - "-c"
            - "max_wal_size=4GB"
            - "-c"
            - "max_worker_processes=8"
            - "-c"
            - "max_parallel_workers_per_gather=4"
            - "-c"
            - "max_parallel_workers=8"
            - "-c"
            - "max_parallel_maintenance_workers=4"
          resources:
            limits:
              memory: "2Gi"
              cpu: "1000m"
            requests:
              memory: "1Gi"
              cpu: "500m"
          livenessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 30
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          readinessProbe:
            exec:
              command:
                - /bin/sh
                - -c
                - exec pg_isready -U "$POSTGRES_USER" -d "$POSTGRES_DB" -h 127.0.0.1 -p 5432
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 5
            failureThreshold: 6
            successThreshold: 1
          volumeMounts:
            - name: postgresql-data
              mountPath: /var/lib/postgresql/data
            - name: postgresql-config
              mountPath: /etc/postgresql/postgresql.conf
              subPath: postgresql.conf
              readOnly: true
          securityContext:
            allowPrivilegeEscalation: false
            capabilities:
              drop:
                - ALL
            runAsNonRoot: true
            runAsUser: 999
      volumes:
        - name: postgresql-config
          configMap:
            name: postgresql-config
  volumeClaimTemplates:
    - metadata:
        name: postgresql-data
        labels:
          app: postgresql
      spec:
        accessModes:
          - ReadWriteOnce
        storageClassName: fast-ssd
        resources:
          requests:
            storage: 50Gi
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql
  namespace: codex-bootstrap
  labels:
    app: postgresql
    component: database
spec:
  type: ClusterIP
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgresql
  selector:
    app: postgresql
---
apiVersion: v1
kind: Service
metadata:
  name: postgresql-headless
  namespace: codex-bootstrap
  labels:
    app: postgresql
    component: database
spec:
  type: ClusterIP
  clusterIP: None
  ports:
    - port: 5432
      targetPort: 5432
      protocol: TCP
      name: postgresql
  selector:
    app: postgresql
---
apiVersion: v1
kind: Secret
metadata:
  name: postgresql-secret
  namespace: codex-bootstrap
  labels:
    app: postgresql
    component: database
type: Opaque
data:
  # Base64 encoded credentials
  # Replace with actual production credentials
  username: aGVsbXNtYW5fdXNlcg==  # helmsman_user
  password: c3Ryb25nX3Byb2R1Y3Rpb25fcGFzc3dvcmQ=  # strong_production_password
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: postgresql-config
  namespace: codex-bootstrap
  labels:
    app: postgresql
    component: database
data:
  postgresql.conf: |
    # PostgreSQL configuration for production
    listen_addresses = '*'
    port = 5432
    
    # Memory settings
    shared_buffers = 256MB
    effective_cache_size = 1GB
    maintenance_work_mem = 64MB
    work_mem = 4MB
    
    # Checkpoint settings
    checkpoint_completion_target = 0.9
    wal_buffers = 16MB
    
    # Query planner
    default_statistics_target = 100
    random_page_cost = 1.1
    effective_io_concurrency = 200
    
    # WAL settings
    min_wal_size = 1GB
    max_wal_size = 4GB
    
    # Connection settings
    max_connections = 200
    
    # Parallel query settings
    max_worker_processes = 8
    max_parallel_workers_per_gather = 4
    max_parallel_workers = 8
    max_parallel_maintenance_workers = 4
    
    # Logging
    log_destination = 'stderr'
    logging_collector = off
    log_min_messages = info
    log_min_error_statement = error
    log_min_duration_statement = 1000
    
    # Security
    ssl = off
    password_encryption = scram-sha-256
